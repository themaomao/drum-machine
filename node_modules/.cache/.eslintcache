[{"/Volumes/React Project/All Project/All Portfolio Project/react-drum/src/index.js":"1","/Volumes/React Project/All Project/All Portfolio Project/react-drum/src/App.js":"2"},{"size":257,"mtime":1691973834000,"results":"3","hashOfConfig":"4"},{"size":6353,"mtime":1691974355000,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dwh8nn",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"/Volumes/React Project/All Project/All Portfolio Project/react-drum/src/index.js",[],[],"/Volumes/React Project/All Project/All Portfolio Project/react-drum/src/App.js",["13","14"],[],"\nimport React from 'react';\nimport './index.css';\n\n\n\n\nconst firstSoundsGroup = [\n    {\n      keyCode: 81,\n      key: 'Q',\n      id: 'Heater-1',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n    },\n    {\n      keyCode: 87,\n      key: 'W',\n      id: 'Heater-2',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n    },\n    {\n      keyCode: 69,\n      key: 'E',\n      id: 'Heater-3',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n    },\n    {\n      keyCode: 65,\n      key: 'A',\n      id: 'Heater-4',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n    },\n    {\n      keyCode: 83,\n      key: 'S',\n      id: 'Clap',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n    },\n    {\n      keyCode: 68,\n      key: 'D',\n      id: 'Open-HH',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n    },\n    {\n      keyCode: 90,\n      key: 'Z',\n      id: \"Kick-n'-Hat\",\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n    },\n    {\n      keyCode: 88,\n      key: 'X',\n      id: 'Kick',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n    },\n    {\n      keyCode: 67,\n      key: 'C',\n      id: 'Closed-HH',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n    }\n  ];\n\nconst secondSoundsGroup = [\n    {\n      keyCode: 81,\n      key: 'Q',\n      id: 'Chord-1',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n    },\n    {\n      keyCode: 87,\n      key: 'W',\n      id: 'Chord-2',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n    },\n    {\n      keyCode: 69,\n      key: 'E',\n      id: 'Chord-3',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n    },\n    {\n      keyCode: 65,\n      key: 'A',\n      id: 'Shaker',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n    },\n    {\n      keyCode: 83,\n      key: 'S',\n      id: 'Open-HH',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n    },\n    {\n      keyCode: 68,\n      key: 'D',\n      id: 'Closed-HH',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n    },\n    {\n      keyCode: 90,\n      key: 'Z',\n      id: 'Punchy-Kick',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n    },\n    {\n      keyCode: 88,\n      key: 'X',\n      id: 'Side-Stick',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n    },\n    {\n      keyCode: 67,\n      key: 'C',\n      id: 'Snare',\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n    }\n  ];\n\nconst soundsName = {\n  heaterKit: \"Heater Kit\",\n  smoothPianoKit: \"Smooth Piano Kit\"\n};\n\nconst soundsGroup = {\n  heaterKit: firstSoundsGroup,\n  smoothPianoKit: secondSoundsGroup\n}\n\nconst KeyboardKey = ({ play, deactivateAudio, sound: { id, key, url, keyCode } }) => {\n  const handleKeydown = (e) => {\n    if(keyCode === e.keyCode) {\n      const audio = document.getElementById(key);\n      play(key, id);\n      deactivateAudio(audio)\n    }\n  }\n  \n  React.useEffect(() => {\n      document.addEventListener('keydown', handleKeydown);\n  }, [])\n\n  return (\n    <button value=\"test\" id={keyCode} className=\"drum-pad\" onClick={() => play(key, id)}>\n      <audio className=\"clip\" src={url} id={key} />\n      {key}\n    </button>\n  );\n}\n\nconst Keyboard = ({ sounds, play, power, deactivateAudio }) =>  (\n  <div className=\"keyboard\">\n    {power \n      ? sounds.map((sound) => <KeyboardKey sound={sound} play={play} deactivateAudio={deactivateAudio} />)\n      : sounds.map((sound) => <KeyboardKey sound={{...sound, url: \"#\" }} play={play} deactivateAudio={deactivateAudio} />)        \n    }\n  </div>\n);\n\nconst DumControle = ({ stop, name, power, volume, handleVolumeChange, changeSoundGroup }) => (\n  <div className=\"controle\">\n    <button onClick={stop}>Turn Power {power ? 'OFF' : 'ON'}</button>\n    <h2>Volume: %{Math.round(volume * 100)}</h2>\n    <input\n      max=\"1\"\n      min=\"0\"\n      step='0.01'\n      type=\"range\"\n      value={volume}\n      onChange={handleVolumeChange}\n      />\n    <h2 id=\"display\" >{name}</h2>\n    <button onClick={changeSoundGroup}>Change Sounds Group</button>\n  </div>\n);\n\nconst App = () => {\n  const [power, setPower] = React.useState(true);\n  const [volume, setVolume] = React.useState(1);\n  const [soundName, setSoundName] = React.useState(\"\");\n  const [soundType, setSoundType] = React.useState(\"heaterKit\");\n  const [sounds, setSounds] = React.useState(soundsGroup[soundType]);\n  \n  const styleActiveKey = (key) => {\n    key.parentElement.style.backgroundColor = \"#000000\"\n    key.parentElement.style.color = \"#ffffff\"\n  }\n  \n  const deActivatedKey = (audio) => {\n    audio.parentElement.style.backgroundColor = \"#ffffff\"\n    audio.parentElement.style.color = \"#000000\"\n  }\n \n const deactivateAudio = (audio) => {\n   setTimeout(() => {\n     audio.parentElement.style.backgroundColor = \"#ffffff\"\n     audio.parentElement.style.color = \"#000000\"\n   }, 300)\n }\n\n  const play = (key, sound) => {\n    setSoundName(sound)\n    const audio = document.getElementById(key);\n    styleActiveKey(audio);\n    audio.currentTime = 0;\n    audio.play();\n    deactivateAudio(audio)\n  }\n\n  const stop = () => {\n     setPower(!power)\n  }\n  \n  const changeSoundGroup = () => {\n    setSoundName(\"\")\n    if(soundType === \"heaterKit\"){\n        setSoundType(\"smoothPianoKit\");\n        setSounds(soundsGroup.smoothPianoKit);\n    } else {\n        setSoundType(\"heaterKit\");\n        setSounds(soundsGroup.heaterKit);\n    }\n  }\n  \n  const handleVolumeChange = e => {\n    setVolume(e.target.value)\n  }\n  \n  const setKeyVolume = () => {\n    const audioes = sounds.map(sound => document.getElementById(sound.key));\n    audioes.forEach(audio => {\n      if(audio) {\n        audio.volume = volume;\n      }\n    }) \n  }\n  \n  return (\n    <div id=\"drum-machine\">\n      {setKeyVolume()}\n      <div className=\"wrapper\">\n        <Keyboard sounds={sounds} play={play} power={power} deactivateAudio={deactivateAudio} />\n        <DumControle \n          stop={stop}\n          power={power}\n          volume={volume} \n          name={soundName || soundsName[soundType]} \n          changeSoundGroup={changeSoundGroup}\n          handleVolumeChange={handleVolumeChange} \n         />\n      </div>\n    </div>\n  )\n};\n\n\n\nexport default App;\n",{"ruleId":"15","severity":1,"message":"16","line":143,"column":6,"nodeType":"17","endLine":143,"endColumn":8,"suggestions":"18"},{"ruleId":"19","severity":1,"message":"20","line":191,"column":9,"nodeType":"21","messageId":"22","endLine":191,"endColumn":23},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'handleKeydown'. Either include it or remove the dependency array.","ArrayExpression",["23"],"no-unused-vars","'deActivatedKey' is assigned a value but never used.","Identifier","unusedVar",{"desc":"24","fix":"25"},"Update the dependencies array to be: [handleKeydown]",{"range":"26","text":"27"},[3178,3180],"[handleKeydown]"]